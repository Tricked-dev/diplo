#https://github.com/diplo/diplo/blob/main/.github/workflows/binaries.yml
name: Rust

on:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
jobs:
  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: rustfmt
      - run: cargo fmt -- --check
  #clippy:
  #runs-on: ${{ matrix.os }}
  #strategy:
  #matrix:
  #os:
  #- ubuntu-latest
  #- macos-latest
  #- windows-latest
  #steps:
  #- uses: actions/checkout@v2
  #- uses: actions-rs/toolchain@v1
  #with:
  #profile: minimal
  #toolchain: nightly
  #override: true
  #components: clippy
  #- run: cargo clippy -- -D warnings

  build:
    name: Build on Rust ${{ matrix.toolchain }} / ${{ matrix.triple.target }}
    runs-on: ${{ matrix.triple.os }}
    strategy:
      fail-fast: false
      matrix:
        triple:
          - {
              os: 'ubuntu-latest',
              target: 'x86_64-unknown-linux-gnu',
              cross: false,
            }
          - {
              os: 'ubuntu-latest',
              target: 'i686-unknown-linux-gnu',
              cross: true,
            }
          - { os: 'macos-latest', target: 'x86_64-apple-darwin', cross: false }
          - {
              os: 'windows-latest',
              target: 'x86_64-pc-windows-msvc',
              cross: false,
            }
          ## ARM64
          - {
              os: 'ubuntu-latest',
              target: 'aarch64-unknown-linux-gnu',
              cross: true,
            }
          # - {
          #     os: 'ubuntu-latest',
          #     target: 'aarch64-unknown-linux-musl',
          #     cross: true,
          #   }
          #- { os: 'macos-latest',  target: 'aarch64-apple-darwin', cross: true }
          ## ARMv7
          - {
              os: 'ubuntu-latest',
              target: 'armv7-unknown-linux-gnueabihf',
              cross: true,
            }
          - {
              os: 'ubuntu-latest',
              target: 'armv7-unknown-linux-musleabihf',
              cross: true,
            }
          ## ARMv6
          - {
              os: 'ubuntu-latest',
              target: 'arm-unknown-linux-gnueabihf',
              cross: true,
            }
          - {
              os: 'ubuntu-latest',
              target: 'arm-unknown-linux-musleabihf',
              cross: true,
            }
          # Android
          - {
              os: 'ubuntu-latest',
              target: 'aarch64-linux-android',
              cross: true,
            }
          - {
              os: 'ubuntu-latest',
              target: 'armv7-linux-androideabi',
              cross: true,
            }
          - { os: 'ubuntu-latest', target: 'x86_64-linux-android', cross: true }
          - { os: 'ubuntu-latest', target: 'i686-linux-android', cross: true }
        toolchain:
          #- "1.54.0"  # minimum supported rust version
          #- stable
          - nightly
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 1

      - name: 'Enable caching'
        uses: Swatinem/rust-cache@v1.3.0

      - name: Install Curl
        if: matrix.triple.os == 'ubuntu-latest'
        run: sudo apt install libcurl4-openssl-dev libssl-dev build-essential checkinstall zlib1g-dev pkg-config && cargo clean

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          override: true

      - name: Check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --target=${{ matrix.triple.target }} --manifest-path=Cargo.toml
          use-cross: ${{ matrix.triple.cross }}

      - name: Build release
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --target=${{ matrix.triple.target }} --manifest-path=Cargo.toml --all-features --release
          use-cross: ${{ matrix.triple.cross }}

      - name: 'Compress executable via UPX (Windows MSVC)'
        if: matrix.triple.os == 'windows-latest'
        uses: crazy-max/ghaction-upx@v1.4.0
        with:
          version: latest
          files: |
            ${{ github.workspace }}\target\release\diplo.exe
            ${{ github.workspace }}\target\${{ matrix.triple.target }}\release\diplo.exe
          args: --best --lzma

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: diplo-${{ matrix.triple.target }}
          path: |
            ${{ github.workspace }}/target/release/diplo
            ${{ github.workspace }}/target/${{ matrix.triple.target }}/release/diplo
            ${{ github.workspace }}\target\release\diplo.exe
            ${{ github.workspace }}\target\${{ matrix.triple.target }}\release\diplo.exe

#removed tests for now because takes too long
#  tests:
#    needs: [build]
#    name: Test ${{ matrix.os }} (rust ${{matrix.toolchain}})
#    runs-on: ${{ matrix.os }}
#    strategy:
#      fail-fast: false
#      matrix:
#        os:
#          - ubuntu-latest
#          - macos-latest
#          - windows-latest
#        toolchain:
#          - "1.54.0" # minimum supported rust version
#          - stable
#          - nightly
#    steps:
#      - uses: actions/checkout@v2
#      - name: Install toolchain
#        uses: actions-rs/toolchain@v1
#        with:
#          profile: minimal
#          toolchain: ${{ matrix.toolchain }}
#          override: true
#      - name: Check docs
#        run: cargo doc
#        if: matrix.toolchain == 'nightly'
#      - name: Execute tests (not mac)
#        run: cargo test
#        if: matrix.os != 'macos-latest'
#        env:
#         RUST_BACKTRACE: full
#      - name: Execute tests (mac)
#        run: cargo test -- --test-threads 1
#        if: matrix.os == 'macos-latest'
#        env:
#          RUST_BACKTRACE: full
